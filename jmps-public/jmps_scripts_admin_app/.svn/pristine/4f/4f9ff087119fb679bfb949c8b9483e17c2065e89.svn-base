#!/bin/sh

#######################################################################################
C_JMPS_LIB_FILE="/opt/jmps/scripts/jmps.lib.sh"
. $C_JMPS_LIB_FILE 2>/dev/null
test $? -ne 0 && echo "ERROR: loading library file, it must located in [$C_JMPS_LIB_FILE]" && exit 1
#######################################################################################

#######################################################################################
debug=0
test $debug -eq 1 && set -x
#######################################################################################

######################################################################################
# name 			: reset_devices
# description 	: Do the reset of the cameras.
# parameters	: none.
# return		: C_OK if OK, otherwise C_NOK.
#######################################################################################
reset_devices()
{
	local rc=$C_NOK
	
	is_su
	if test $? -eq $C_OK
	then
		log "*"
		log "*"
		log "*******************************************"
		log "*******************************************"
		log "Starting ..."
		log "*******************************************"
		rc=0
		
		execute_action "/etc/init.d/cron stop";rc=$(expr $rc + $?)
		sleep 1
		execute_action "/etc/init.d/webcam-server stop";rc=$(expr $rc + $?)
		sleep 1
		execute_action "killall -9 motion";rc=$(expr $rc + $?)
		sleep 1
		execute_action "rmmod bttv";rc=$(expr $rc + $?)
		sleep 1
#		execute_action "sh /opt/jmps/scripts/reset_usb_devices.sh usbs disconnect";rc=$(expr $rc + $?)
#		sleep 1
		execute_action "modprobe -v bttv";rc=$(expr $rc + $?)
		sleep 1
#		execute_action "sh /opt/jmps/scripts/reset_usb_devices.sh usbs connect";rc=$(expr $rc + $?)
#		sleep 1
		execute_action "/etc/init.d/cron start";rc=$(expr $rc + $?)
		log "*******************************************"
		log "*"
		log "*"
	else
		log "*******************************************"
		log "Not super user (root)"
		log "*******************************************"
	fi

	test $rc -eq 0 && return $C_OK
	return $C_NOK	
}
#######################################################################################

#######################################################################################
# name 			: main
# description 	: Main function of the shell script.
# parameters	: none. 
# return		: C_TRUE if OK, otherwise C_FALSE.
#######################################################################################
main()
{
	#----------------------------------------------------------------------------------
	check_if_there_is_another_instance_running "$0"
	if test $? -ne $C_OK
	then
		log "There is another instance of [$0] running. Exiting..."
		exit $C_NOK
	fi
	#----------------------------------------------------------------------------------	
			
	log "****************************************"
	log "************  COMIENZO  ****************"
	log "****************************************"

	###################################################################################
	reset_devices
	###################################################################################

	log "****************************************"
	log "***************  FIN  ******************"
	log "****************************************"
	
	#----------------------------------------------------------------------------------
	erase_flag_for_instance_running "$0"	
	return $C_TRUE
	#----------------------------------------------------------------------------------
}
#######################################################################################

#######################################################################################
main "$*"
return $?
#######################################################################################
