/**
 * 
 */
package com.gilbarco.globaltools.edt.commands;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.gilbarco.globaltools.edt.services.EdtEvent;

/**
 * @author ajadzinsky Jul 22, 2010
 *
 */
public class CommandInvoker {
	// ******************************************************************
	// STATIC FIELDS
	// ******************************************************************
	private static final transient Log	logger				= LogFactory.getLog( CommandInvoker.class );

	// ******************************************************************
	// STATIC METHODS
	// ******************************************************************
	public static void invoke(EdtEvent event) {
		Command<EdtEvent> cmd = CommandRegistry.getInstance().getCommand(event.getEventType());
		try {
			cmd.execute(event);
		}
		catch (CommandExecutionException e) {
			logger.error( e.getMessage( ) );
		}
	}
	// ******************************************************************
	// PUBLIC FIELDS.
	// ******************************************************************

	// ******************************************************************
	// PROTECTED FIELDS.
	// ******************************************************************

	// ******************************************************************
	// PRIVATE FIELDS.
	// ******************************************************************

	// ******************************************************************
	// CONSTRUCTOR.
	// ******************************************************************

	// ******************************************************************
	// PUBLIC METHODS       (general, getter, setter, interface imp)
	// ******************************************************************

	// ******************************************************************
	// PROTECTED METHODS.
	// ******************************************************************

	// ******************************************************************
	// PRIVATE METHODS.
	// ******************************************************************

	// ******************************************************************
	// INNER CLASSES.
	// ******************************************************************

	// ******************************************************************
	// MAIN.
	// ******************************************************************

}
